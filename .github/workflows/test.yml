name: Test
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-latest, macos-10.15,  windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Install trunk
        uses: jetli/trunk-action@v0.1.0
        with:
          version: 'latest'
      - uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          # Optional version of wasm-bindgen to install(eg. '0.2.68', 'latest')
          version: 'latest'

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Run check
        run: cargo check
        if: matrix.platform == 'ubuntu-latest'
      - name: Run fmt
        run: cargo fmt -- --check
        if: matrix.platform == 'ubuntu-latest'
      - name: Run clippy
        run: cargo clippy -- --deny=warnings
        if: matrix.platform == 'ubuntu-latest'

      - name: test rust backend
        run: cargo test --manifest-path=src-tauri/Cargo.toml --verbose
        if: matrix.platform == 'ubuntu-latest'
      - name: test rust frontend
        run: cargo test  --verbose
        if: matrix.platform == 'ubuntu-latest'

      - name: Build app
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}